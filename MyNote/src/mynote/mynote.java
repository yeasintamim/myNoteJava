/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mynote;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Asus
 */
public class mynote extends javax.swing.JFrame {

    /**
     * Creates new form mynote
     */
        Connection con1;
        PreparedStatement insert;
    public mynote() {
        initComponents();
        task_table_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
    
    private void task_table_update(){
        int column;
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/my_note","root","yeasin");
            insert = con1.prepareStatement("SELECT * FROM task_table");
            
            ResultSet rs = insert.executeQuery();
            ResultSetMetaData Rsmd = rs.getMetaData();
            
            column = Rsmd.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)task_table.getModel();
            df.setRowCount(0);
            //===================================================
            task_table.setAutoResizeMode(task_table.AUTO_RESIZE_OFF);
            TableColumn col0 = task_table.getColumnModel().getColumn(0);
            col0.setPreferredWidth(20);
            TableColumn col1 = task_table.getColumnModel().getColumn(1);
            col1.setPreferredWidth(250);
            TableColumn col2 = task_table.getColumnModel().getColumn(2);
            col2.setPreferredWidth(90);
            TableColumn col3 = task_table.getColumnModel().getColumn(3);
            col3.setPreferredWidth(90);
            
            
            //===================================================
            while(rs.next()){
                Vector v =  new Vector();
                
                for(int i =1 ; i <= column; i++){
                    v.add(rs.getString("id"));
                    v.add(rs.getString("Task"));
                    v.add(rs.getString("Date"));
                    v.add(rs.getString("Time"));
                    
                }
                
                df.addRow(v);
            }
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(mynote.class.getName()).log(Level.SEVERE, null, ex);
        } 

        
    }
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        CreateNote = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfTask = new javax.swing.JTextField();
        tfDate = new javax.swing.JTextField();
        tfTime = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        task_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Open Sans", 1, 36)); // NOI18N
        jLabel1.setText("MyNote");

        CreateNote.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create Note", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 24), new java.awt.Color(0, 153, 204))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel2.setText("Task");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel3.setText("Date");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel4.setText("Time");

        tfTask.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N

        tfDate.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        tfDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDateActionPerformed(evt);
            }
        });

        tfTime.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N

        addButton.setBackground(new java.awt.Color(0, 153, 204));
        addButton.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(0, 153, 204));
        deleteButton.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(0, 153, 204));
        editButton.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CreateNoteLayout = new javax.swing.GroupLayout(CreateNote);
        CreateNote.setLayout(CreateNoteLayout);
        CreateNoteLayout.setHorizontalGroup(
            CreateNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateNoteLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(CreateNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateNoteLayout.createSequentialGroup()
                        .addGroup(CreateNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CreateNoteLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreateNoteLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)))
                        .addGroup(CreateNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfDate, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTask, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(CreateNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(CreateNoteLayout.createSequentialGroup()
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(33, 33, 33)
                            .addComponent(deleteButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CreateNoteLayout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(tfTime, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 32, Short.MAX_VALUE))
        );
        CreateNoteLayout.setVerticalGroup(
            CreateNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateNoteLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(CreateNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(CreateNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(CreateNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTime, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(CreateNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(deleteButton)
                    .addComponent(editButton))
                .addGap(30, 30, 30))
        );

        task_table.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        task_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Task", "Date", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        task_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                task_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(task_table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(405, 405, 405)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(CreateNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(CreateNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDateActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel df = (DefaultTableModel)task_table.getModel();
        int selectedIndex = task_table.getSelectedRow();
        
        try {
            
            int id = Integer.parseInt(df.getValueAt(selectedIndex, 0).toString());
            int dialogResult = JOptionPane.showConfirmDialog(null,"Do you want to delete it permanently","Warning",JOptionPane.YES_NO_OPTION);
            
            if(dialogResult == JOptionPane.YES_OPTION){
                            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/my_note","root","yeasin");
            insert = con1.prepareStatement("DELETE FROM task_table WHERE id = ?");
            insert.setInt(1, id);
            
            
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Deleted Permanently");
            
          tfTask.setText("");
          tfDate.setText("");
          tfTime.setText("");
          tfTask.requestFocus();
            
        } 
            }
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(mynote.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        task_table_update();

        
    }//GEN-LAST:event_deleteButtonActionPerformed

    

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        String task = tfTask.getText();
        String date = tfDate.getText();
        String time = tfTime.getText();
        

        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/my_note","root","yeasin");
            insert = con1.prepareStatement("INSERT INTO task_table(Task,Date,Time) VALUES(?,?,?)");
            
            insert.setString(1, task);
            insert.setString(2, date);
            insert.setString(3, time);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Task Adeed");
            
          tfTask.setText("");
          tfDate.setText("");
          tfTime.setText("");
          tfTask.requestFocus();
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(mynote.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        task_table_update();
      
        
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void task_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_task_tableMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel df = (DefaultTableModel)task_table.getModel();
        
        int selectedIndex = task_table.getSelectedRow();
        
        tfTask.setText(df.getValueAt(selectedIndex,1).toString());
        tfDate.setText(df.getValueAt(selectedIndex,2).toString());
        tfTime.setText(df.getValueAt(selectedIndex,3).toString());
        
        
        
    }//GEN-LAST:event_task_tableMouseClicked

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel df = (DefaultTableModel)task_table.getModel();
        int selectedIndex = task_table.getSelectedRow();
        
        
        try {
            int id = Integer.parseInt(df.getValueAt(selectedIndex, 0).toString());
            String task = tfTask.getText();
            String date = tfDate.getText();
            String time = tfTime.getText();
            
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/my_note","root","yeasin");
            insert = con1.prepareStatement("UPDATE task_table set Task = ?, Date = ? , Time = ? WHERE id = ?");
            
            insert.setString(1, task);
            insert.setString(2, date);
            insert.setString(3, time);
            insert.setInt(4, id);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Edited Successfully ");
            
            tfTask.setText("");
            tfDate.setText("");
            tfTime.setText("");
            tfTask.requestFocus();
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(mynote.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        task_table_update();
        
    }//GEN-LAST:event_editButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mynote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mynote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mynote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mynote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mynote().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CreateNote;
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable task_table;
    private javax.swing.JTextField tfDate;
    private javax.swing.JTextField tfTask;
    private javax.swing.JTextField tfTime;
    // End of variables declaration//GEN-END:variables
}
